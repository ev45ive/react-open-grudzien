[{"C:\\Projects\\sages\\react-open-grudzien\\src\\App.tsx":"1","C:\\Projects\\sages\\react-open-grudzien\\src\\index.tsx":"2","C:\\Projects\\sages\\react-open-grudzien\\src\\reportWebVitals.ts":"3","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistForm.tsx":"4","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\containers\\PlaylistsView.tsx":"5","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistDetails.tsx":"6","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistsList.tsx":"7"},{"size":569,"mtime":1608548015773,"results":"8","hashOfConfig":"9"},{"size":1989,"mtime":1608544202654,"results":"10","hashOfConfig":"9"},{"size":425,"mtime":1608540738439,"results":"11","hashOfConfig":"9"},{"size":1924,"mtime":1608565729580,"results":"12","hashOfConfig":"9"},{"size":2693,"mtime":1608564595847,"results":"13","hashOfConfig":"9"},{"size":891,"mtime":1608564373243,"results":"14","hashOfConfig":"9"},{"size":1252,"mtime":1608564485283,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jty2et",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\sages\\react-open-grudzien\\src\\App.tsx",["32"],"C:\\Projects\\sages\\react-open-grudzien\\src\\index.tsx",["33","34"],"import React, { ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nwindow.React = React;\nwindow.ReactDOM = ReactDOM;\n\ntype Props = {\n  name: string;\n  color: string;\n  children: React.ReactNode[] | React.ReactNode\n};\n\nconst PersonElem = (props: Props) => React.createElement('div', {\n  style: { color: props.color }\n},\n  props.name + \" ma kota\" + props.children + PersonItem({})\n);\nconst PersonItem:React.FunctionComponent = (props) => <div>Item</div>\n\n\nconst title = \"title\"\nconst div = <div id=\"123\" title={title + \"!\"}>\n  {/* {PersonElem({ color: 'red', name: \"Asia\" })} */}\n  <PersonElem name=\"Alice\" color=\"red\"> Placki <div>Test</div> </PersonElem>\n  <PersonElem name={'Bob'} color=\"red\"> Placki <PersonItem>Test</PersonItem> </PersonElem>\n\n  <span title=\"placki\" className=\"klasa\" style={\n    {\n      color: 'red',\n      borderBottom: '1px solid red'\n    }\n  }></span>\n  i placki\n</div>;\ndebugger\n\nReactDOM.render(div, document.getElementById('root'))\n\n// const div = React.createElement('div', {},\n//   PersonElem({ color: 'red', name: \"Asia\" }),\n//   PersonElem({ color: 'blue', name: \"Bob\" }),\n//   PersonElem({ color: 'green', name: \"Kate\" }),\n// )\n\n// const div = React.createElement('div', { id: '123', title: 'test' },\n//   PersonElem({ color: 'red', name: \"Asia\" }),\n//   React.createElement('input'),\n//   React.createElement('span', {\n//     title: \"placki\",\n//     className: \"klasa\",\n//     style: {\n//       color: 'red',\n//       borderBottom: '1px solid red'\n//     }\n//   }, \"i placki\"),\n// )\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Projects\\sages\\react-open-grudzien\\src\\reportWebVitals.ts",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistForm.tsx",["35"],"\r\nimport { Formik, FormikHelpers } from 'formik'\r\nimport React, { Component, PureComponent } from 'react'\r\nimport { Playlist } from '../../core/model/Playlist'\r\n\r\ninterface Props {\r\n  playlist: Playlist\r\n  onCancel(): void,\r\n  onSave(): void,\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\n\r\n\r\nexport default class PlaylistForm extends PureComponent<Props, State> {\r\n  state: State = {}\r\n  nameInputRef = React.createRef<HTMLInputElement>()\r\n\r\n  componentDidMount() {\r\n    if (this.nameInputRef.current) {\r\n      this.nameInputRef.current.focus()\r\n    }\r\n  }\r\n\r\n  submit = (values: Playlist, formikHelpers: FormikHelpers<Playlist>) => {\r\n    console.log(values)\r\n    // formikHelpers\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Formik \r\n          initialValues={this.props.playlist}\r\n          enableReinitialize={true}\r\n          onSubmit={this.submit}>{\r\n            ({ handleChange, handleSubmit, values }) => <div>\r\n              <div className=\"form-group\">\r\n                <label>Name:</label>\r\n                <input type=\"text\" className=\"form-control\" name=\"name\" value={values.name} ref={this.nameInputRef} onChange={handleChange} />\r\n                {values.name.length} / 170\r\n              </div>\r\n\r\n              <div className=\"form-group\"><label>\r\n                <input type=\"checkbox\" name=\"public\" checked={values.public} onChange={handleChange} /> Public</label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Description:</label>\r\n                <textarea className=\"form-control\" name=\"description\" value={values.description} onChange={handleChange}></textarea>\r\n              </div>\r\n\r\n              <button className=\"btn btn-danger\" onClick={this.props.onCancel}>Cancel</button>\r\n\r\n              <button className=\"btn btn-success\" onClick={() => handleSubmit()}>Save</button>\r\n            </div>\r\n          }</Formik>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\containers\\PlaylistsView.tsx",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistDetails.tsx",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistsList.tsx",["36"],{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":29},{"ruleId":"37","severity":1,"message":"42","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":11},{"ruleId":"37","severity":1,"message":"43","line":3,"column":17,"nodeType":"39","messageId":"40","endLine":3,"endColumn":26},{"ruleId":"37","severity":1,"message":"43","line":2,"column":17,"nodeType":"39","messageId":"40","endLine":2,"endColumn":26},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactElement' is defined but never used.","'App' is defined but never used.","'Component' is defined but never used."]