[{"C:\\Projects\\sages\\react-open-grudzien\\src\\App.tsx":"1","C:\\Projects\\sages\\react-open-grudzien\\src\\index.tsx":"2","C:\\Projects\\sages\\react-open-grudzien\\src\\reportWebVitals.ts":"3","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistForm.tsx":"4","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\containers\\PlaylistsView.tsx":"5","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistDetails.tsx":"6","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistsList.tsx":"7"},{"size":569,"mtime":1608548015773,"results":"8","hashOfConfig":"9"},{"size":1989,"mtime":1608544202654,"results":"10","hashOfConfig":"9"},{"size":425,"mtime":1608540738439,"results":"11","hashOfConfig":"9"},{"size":2028,"mtime":1608560550397,"results":"12","hashOfConfig":"9"},{"size":2079,"mtime":1608559775526,"results":"13","hashOfConfig":"9"},{"size":748,"mtime":1608558894544,"results":"14","hashOfConfig":"9"},{"size":1237,"mtime":1608559201936,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jty2et",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\sages\\react-open-grudzien\\src\\App.tsx",["32"],"C:\\Projects\\sages\\react-open-grudzien\\src\\index.tsx",["33","34"],"import React, { ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nwindow.React = React;\nwindow.ReactDOM = ReactDOM;\n\ntype Props = {\n  name: string;\n  color: string;\n  children: React.ReactNode[] | React.ReactNode\n};\n\nconst PersonElem = (props: Props) => React.createElement('div', {\n  style: { color: props.color }\n},\n  props.name + \" ma kota\" + props.children + PersonItem({})\n);\nconst PersonItem:React.FunctionComponent = (props) => <div>Item</div>\n\n\nconst title = \"title\"\nconst div = <div id=\"123\" title={title + \"!\"}>\n  {/* {PersonElem({ color: 'red', name: \"Asia\" })} */}\n  <PersonElem name=\"Alice\" color=\"red\"> Placki <div>Test</div> </PersonElem>\n  <PersonElem name={'Bob'} color=\"red\"> Placki <PersonItem>Test</PersonItem> </PersonElem>\n\n  <span title=\"placki\" className=\"klasa\" style={\n    {\n      color: 'red',\n      borderBottom: '1px solid red'\n    }\n  }></span>\n  i placki\n</div>;\ndebugger\n\nReactDOM.render(div, document.getElementById('root'))\n\n// const div = React.createElement('div', {},\n//   PersonElem({ color: 'red', name: \"Asia\" }),\n//   PersonElem({ color: 'blue', name: \"Bob\" }),\n//   PersonElem({ color: 'green', name: \"Kate\" }),\n// )\n\n// const div = React.createElement('div', { id: '123', title: 'test' },\n//   PersonElem({ color: 'red', name: \"Asia\" }),\n//   React.createElement('input'),\n//   React.createElement('span', {\n//     title: \"placki\",\n//     className: \"klasa\",\n//     style: {\n//       color: 'red',\n//       borderBottom: '1px solid red'\n//     }\n//   }, \"i placki\"),\n// )\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Projects\\sages\\react-open-grudzien\\src\\reportWebVitals.ts",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistForm.tsx",["35"],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\containers\\PlaylistsView.tsx",["36"],"\r\n// tsrcc\r\nimport React, { Component } from 'react'\r\nimport { Playlist } from '../../core/model/Playlist'\r\nimport { PlaylistDetails } from '../components/PlaylistDetails'\r\nimport PlaylistForm from '../components/PlaylistForm'\r\nimport PlaylistsList from '../components/PlaylistsList'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n  playlists: Playlist[]\r\n  selected?: Playlist\r\n}\r\n\r\nexport default class PlaylistsView extends Component<Props, State> {\r\n  state: State = {\r\n    playlists: [\r\n      {\r\n        id: 123,\r\n        name: 'Playlist',\r\n        public: true,\r\n        description: 'My playlist'\r\n      },\r\n      {\r\n        id: 234,\r\n        name: 'Playlist 234',\r\n        public: false,\r\n        description: 'My playlist 234'\r\n      },\r\n      {\r\n        id: 345,\r\n        name: 'Playlist 354',\r\n        public: true,\r\n        description: 'My playlist 345'\r\n      },\r\n    ],\r\n\r\n    // selected: {\r\n    //   id: 123,\r\n    //   name: 'Playlist',\r\n    //   public: true,\r\n    //   description: 'My playlist'\r\n    // }\r\n  }\r\n\r\n  select(selectedId: Playlist['id']) {\r\n    this.setState({\r\n      selected:\r\n        selectedId === this.state.selected?.id ? undefined :\r\n          this.state.playlists.find(p => p.id === selectedId)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* .row>.col>PlaylistList^.col>PlaylistDetails+PlaylistForm */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <PlaylistsList\r\n              playlists={this.state.playlists}\r\n              selected={this.state.selected && this.state.selected.id}\r\n              onSelected={playlist_id => this.select(playlist_id)}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n\r\n            {this.state.selected ?\r\n              <PlaylistDetails playlist={this.state.  selected}/>\r\n              : null\r\n            }\r\n\r\n            {this.state.selected && <PlaylistForm playlist={this.state.selected}/>}\r\n\r\n            {!this.state.selected && <p>Please select playlist</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistDetails.tsx",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistsList.tsx",[],{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":29},{"ruleId":"37","severity":1,"message":"42","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":11},{"ruleId":"43","severity":1,"message":"44","line":26,"column":3,"nodeType":"45","messageId":"46","endLine":28,"endColumn":4},{"ruleId":"47","severity":1,"message":"48","line":73,"column":42,"nodeType":"49","messageId":"50","endLine":73,"endColumn":63,"fix":"51"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactElement' is defined but never used.","'App' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-whitespace-before-property","Unexpected whitespace before property selected.","MemberExpression","unexpectedWhitespace",{"range":"52","text":"53"},[1805,1808],"."]