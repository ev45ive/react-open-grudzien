[{"C:\\Projects\\sages\\react-open-grudzien\\src\\App.tsx":"1","C:\\Projects\\sages\\react-open-grudzien\\src\\index.tsx":"2","C:\\Projects\\sages\\react-open-grudzien\\src\\reportWebVitals.ts":"3","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistForm.tsx":"4","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\containers\\PlaylistsView.tsx":"5","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistDetails.tsx":"6","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistsList.tsx":"7"},{"size":569,"mtime":1608548015773,"results":"8","hashOfConfig":"9"},{"size":1989,"mtime":1608544202654,"results":"10","hashOfConfig":"9"},{"size":425,"mtime":1608540738439,"results":"11","hashOfConfig":"9"},{"size":2381,"mtime":1608563255958,"results":"12","hashOfConfig":"9"},{"size":2448,"mtime":1608562461824,"results":"13","hashOfConfig":"9"},{"size":849,"mtime":1608562427762,"results":"14","hashOfConfig":"9"},{"size":1237,"mtime":1608559201936,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jty2et",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\sages\\react-open-grudzien\\src\\App.tsx",["32"],"C:\\Projects\\sages\\react-open-grudzien\\src\\index.tsx",["33","34"],"import React, { ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nwindow.React = React;\nwindow.ReactDOM = ReactDOM;\n\ntype Props = {\n  name: string;\n  color: string;\n  children: React.ReactNode[] | React.ReactNode\n};\n\nconst PersonElem = (props: Props) => React.createElement('div', {\n  style: { color: props.color }\n},\n  props.name + \" ma kota\" + props.children + PersonItem({})\n);\nconst PersonItem:React.FunctionComponent = (props) => <div>Item</div>\n\n\nconst title = \"title\"\nconst div = <div id=\"123\" title={title + \"!\"}>\n  {/* {PersonElem({ color: 'red', name: \"Asia\" })} */}\n  <PersonElem name=\"Alice\" color=\"red\"> Placki <div>Test</div> </PersonElem>\n  <PersonElem name={'Bob'} color=\"red\"> Placki <PersonItem>Test</PersonItem> </PersonElem>\n\n  <span title=\"placki\" className=\"klasa\" style={\n    {\n      color: 'red',\n      borderBottom: '1px solid red'\n    }\n  }></span>\n  i placki\n</div>;\ndebugger\n\nReactDOM.render(div, document.getElementById('root'))\n\n// const div = React.createElement('div', {},\n//   PersonElem({ color: 'red', name: \"Asia\" }),\n//   PersonElem({ color: 'blue', name: \"Bob\" }),\n//   PersonElem({ color: 'green', name: \"Kate\" }),\n// )\n\n// const div = React.createElement('div', { id: '123', title: 'test' },\n//   PersonElem({ color: 'red', name: \"Asia\" }),\n//   React.createElement('input'),\n//   React.createElement('span', {\n//     title: \"placki\",\n//     className: \"klasa\",\n//     style: {\n//       color: 'red',\n//       borderBottom: '1px solid red'\n//     }\n//   }, \"i placki\"),\n// )\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Projects\\sages\\react-open-grudzien\\src\\reportWebVitals.ts",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistForm.tsx",["35"],"\r\nimport React, { Component } from 'react'\r\nimport { Playlist } from '../../core/model/Playlist'\r\n\r\ninterface Props {\r\n  playlist: Playlist\r\n  onCancel(): void,\r\n  onSave(): void,\r\n}\r\n\r\ninterface State {\r\n  playlist: Playlist,\r\n  counter: number\r\n}\r\n\r\n\r\n\r\nexport default class PlaylistForm extends Component<Props, State> {\r\n  state: State = {\r\n    playlist: {\r\n      id: 123,\r\n      name: 'Playlist',\r\n      public: true,\r\n      description: 'My playlist'\r\n    },\r\n    counter: 0\r\n  }\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n  }\r\n\r\n  nameInputRef = React.createRef<HTMLInputElement>()\r\n\r\n  componentDidMount() {\r\n    if (this.nameInputRef.current) {\r\n      this.nameInputRef.current.focus()\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\r\n    console.log('getDerivedStateFromProps')\r\n    return {\r\n      playlist: nextProps.playlist.id === nextState.playlist.id ? nextState.playlist : nextProps.playlist\r\n    }\r\n  }\r\n\r\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    this.setState((prevState, props) => {\r\n      console.log(event)\r\n      return ({\r\n        playlist: {\r\n          ...prevState.playlist,\r\n          name: event.target.value\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log('render')\r\n    const { playlist } = this.state\r\n\r\n    return (\r\n      <div>\r\n        {/* .form-group>label{Name:}+input.form-control */}\r\n        <div className=\"form-group\">\r\n          <label>Name:</label>\r\n          <input type=\"text\" className=\"form-control\" value={playlist.name} ref={this.nameInputRef}\r\n            onChange={this.handleChange} />\r\n          {playlist.name.length} / 170\r\n        </div>\r\n\r\n        {/* .form-group>label>input[type=checkbox]+{ Public} */}\r\n        <div className=\"form-group\"><label>\r\n          <input type=\"checkbox\" defaultChecked={playlist.public} /> Public</label>\r\n        </div>\r\n\r\n        {/* .form-group>label{Description:}+textarea.form-control */}\r\n        <div className=\"form-group\">\r\n          <label>Description:</label>\r\n          <textarea className=\"form-control\" defaultValue={playlist.description}></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-danger\" onClick={this.props.onCancel}>Cancel</button>\r\n\r\n        <button className=\"btn btn-success\" onClick={this.props.onSave}>Save</button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\containers\\PlaylistsView.tsx",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistDetails.tsx",[],"C:\\Projects\\sages\\react-open-grudzien\\src\\playlists\\components\\PlaylistsList.tsx",[],{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":29},{"ruleId":"36","severity":1,"message":"41","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":11},{"ruleId":"42","severity":1,"message":"43","line":29,"column":3,"nodeType":"44","messageId":"45","endLine":31,"endColumn":4},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactElement' is defined but never used.","'App' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]